
#pragma once

/************************************************************************/

#ifdef __cplusplus

/************************************************************************/

#include <akilcd/akilcd.h>
#include <Others/Others.h>
#include <MainCircit/Motor/MotorBase/MotorBase.h>

/************************************************************************/

namespace ClassMotor
{

/************************************************************************/
/*	MotorBase															*/
/************************************************************************/

//----------------------------------------------------------------------//

MotorBase :: MotorBase ()
{	
	_mem_data._0._all = 0x000;
	_mem_data._1._all = 0x000;
	
	_mem_data._0._sub._num_data = MD_DATA_0;
	_mem_data._1._sub._num_data = MD_DATA_1;
}

//----------------------------------------------------------------------//

void MotorBase :: Initialize 
(
	const NumMDC	_arg_num_mdc, 
	const NumMD		_arg_num_md
)
{
	_mem_data._0._all = 0x000;
	_mem_data._1._all = 0x000;
	
	_mem_data._0._sub._num_data = MD_DATA_0;
	_mem_data._1._sub._num_data = MD_DATA_1;
	
	_mem_data._0._sub._num_mdc = _arg_num_mdc;
	_mem_data._1._sub._num_mdc = _arg_num_mdc;
	
	_mem_data._0._sub._num_md = _arg_num_md;
	_mem_data._1._sub._num_md = _arg_num_md;
}

//----------------------------------------------------------------------//

void MotorBase :: Clear()
{
	_mem_data._0._sub._sig = SIGNAL_FREE;
	_mem_data._1._sub._pwm = 0;
	
	_mem_data._0._sub._is_steps_on = FALSE;
}

//----------------------------------------------------------------------//

void MotorBase :: Reset_num 
(
	const NumMDC	_arg_num_mdc, 
	const NumMD		_arg_num_md
)
{
	_mem_data._0._sub._num_mdc = _arg_num_mdc;
	_mem_data._1._sub._num_mdc = _arg_num_mdc;
	
	_mem_data._0._sub._num_md = _arg_num_md;
	_mem_data._1._sub._num_md = _arg_num_md;
}

//----------------------------------------------------------------------//

/************************************************************************/
/*	MotorRead															*/
/************************************************************************/

//----------------------------------------------------------------------//

MotorRead :: MotorRead ()	{}

//----------------------------------------------------------------------//

/************************************************************************/
/*	MotorOperate														*/
/************************************************************************/

//----------------------------------------------------------------------//

MotorOperate :: MotorOperate ()	{}

//----------------------------------------------------------------------//

void MotorOperate :: Set (const Signal _arg_sig)
{
	Set_direct(_arg_sig);
	
	if (Is_Signal_stop(_arg_sig))
	{
		Set_direct(0);
	}
}

//----------------------------------------------------------------------//

void MotorOperate :: Set (const Pwm _arg_pwm)
{
	if (Is_Signal_rotation(Get_sig()))
	{
		Set_direct(To_within(_arg_pwm + _mem_pwm_adjustment, 31, 0));
	}
	else
	{
		Set_direct(0);
	}
}

//----------------------------------------------------------------------//

/************************************************************************/
/*	MotorLCD															*/
/************************************************************************/

//----------------------------------------------------------------------//

MotorLCD :: MotorLCD ()	{}

//----------------------------------------------------------------------//

/************************************************************************/

};

/************************************************************************/

#endif	//__cplusplus

/************************************************************************/

