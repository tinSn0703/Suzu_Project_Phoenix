
#define _UART_SOURCE_

/************************************************************************/

#include <avr/io.h>
#include <Others/BOOL.h>
#include <AVR/Uart/UartBase/UartBase.h>

/************************************************************************/

namespace ClassUart
{

/************************************************************************/
/*	UartBase															*/
/************************************************************************/

//----------------------------------------------------------------------//

UartBase :: UartBase()	{}

//----------------------------------------------------------------------//

UartBase :: UartBase (UartNum _arg_uart_adrs)
{
	Initialize(_arg_uart_adrs);
}

//----------------------------------------------------------------------//

void UartBase :: Initialize ()
{
	_UBRR_  = 0x0004;
	_UCSRA_ = (1 << U2X);
	_UCSRB_ &= ~((1 << RXEN) | (1 << TXEN) | (1 << UCSZ2) | (1 << RXCIE) | (1 << TXCIE) | (1 << UDRIE));
	_UCSRC_ = ((1 << UPM1) | (1 << UPM0) | (1 << UCSZ1) | (1 << UCSZ0));
}

//----------------------------------------------------------------------//

void UartBase :: Initialize (UartNum _arg_adrs)
{
	_mem_uart_adrs = _arg_adrs;
	
	_UBRR_  = 0x0004;
	_UCSRA_ = (1 << U2X);
	_UCSRB_ &= ~((1 << RXEN) | (1 << TXEN) | (1 << UCSZ2) | (1 << RXCIE) | (1 << TXCIE) | (1 << UDRIE));
	_UCSRC_ = ((1 << UPM1) | (1 << UPM0) | (1 << UCSZ1) | (1 << UCSZ0));
}

//----------------------------------------------------------------------//

/************************************************************************/
/*	UartSet																*/
/************************************************************************/

//----------------------------------------------------------------------//

UartSet :: UartSet()	{}

//----------------------------------------------------------------------//

UartSet :: UartSet (UartNum _arg_uart_adrs)

	: UartBase(_arg_uart_adrs)

{}

//----------------------------------------------------------------------//

void UartSet :: Want_to_enable_9bit (const YesNo _yes_no)
{
	if (_yes_no)	UartSet :: Enable_9bit();
	else			UartSet :: Disable_9bit();
}

//----------------------------------------------------------------------//

void UartSet :: Want_to_enable_isr(const UartISR _isr, const YesNo _yes_no)
{
	if (_yes_no)	UartSet :: Enable_isr(_isr);
	else			UartSet :: Disable_isr(_isr);
}

//----------------------------------------------------------------------//

/************************************************************************/

};

/************************************************************************/

#undef _UART_SOURCE_
#undef _UCSRA_
#undef _UCSRB_
#undef _UCSRC_
#undef _UBRRL_
#undef _UBRRH_
#undef _UDR_
#undef _UBRR_

/************************************************************************/
