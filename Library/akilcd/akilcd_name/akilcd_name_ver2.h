
#pragma once

/************************************************************************/

//----------------------------------------------------------------------//

/**
 *	　LCDを使用可能な状態にする関数。
 *	　この関数を呼び出せば、LCDを使ことができます。
 */
inline void LCD_Init ()
{
	INI_LCD();
}

//----------------------------------------------------------------------//

/**
 *	　LCDの表示を全て消す関数。
 */
inline void LCD_Clear ()
{
	CLR_DISPLAY();
}

//----------------------------------------------------------------------//

inline void LCD_Clear_on ()
{
	STR_LCD(0x00, LCD_SEMI_CLEAR);
}

//----------------------------------------------------------------------//

inline void LCD_Clear_un ()
{
	STR_LCD(0x40, LCD_SEMI_CLEAR);
}

//----------------------------------------------------------------------//

/**
 *	　文字をLCDに表示する関数。
 * 
 *	_adrs	: 表示する場所
 *	_char	: 表示する文字
 */
inline void LCD_Display_char (const LcdAdrs _adrs, const char _char)
{
	PUT_LCD(_adrs, _char);
}

//----------------------------------------------------------------------// 

/**
 *	　LCDに文字列を表示する関数。
 * 
 *	_adrs	: 表示の先頭の場所
 *	_str	: 表示する文字列
 */
inline void LCD_Display_str (const LcdAdrs _adrs, const char _str[])
{
	STR_LCD(_adrs, _str);
}

//----------------------------------------------------------------------//

/**
 *	　数値をLCDに表示する関数。
 * 
 *	_adrs		: 表示の先頭の場所
 *	_put_data	: 表示する数値
 *	_digit		: 表示したい桁数
 *	decimal		: 表示したい進数 (2 〜 16進数まで)
 */
inline void LCD_Display_num
(
	const LcdAdrs	_adrs,
	unsigned long	_put_data,
	const Digit	_digit,
	const Decimal	_decimal
)
{
	PUT_NUM(_adrs, _put_data, _digit, _decimal);
}

//----------------------------------------------------------------------//

/************************************************************************/
